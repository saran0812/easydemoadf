{
	"name": "Execute Medallion architecture",
	"properties": {
		"activities": [
			{
				"name": "Execute Medallion architecture",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "---Bronze---\ncreate or replace view easy_hist.bronze.daily_results\nas\nselect\nV:generated_at::date as generated_at,\nres.Value:sport_event.id::string as sport_event_id ,\nres.Value:sport_event.scheduled::string as scheduled,\nres.Value:sport_event.season.end_date::string as season_end_date,\nres.Value:sport_event.season.id::string as season_id,\nres.Value:sport_event.season.name::string as season_name,\nres.Value:sport_event.season.start_date::string as season_start_date,\nres.Value:sport_event.season.year::string as season_year,\nres.Value:sport_event.start_time_tbd::string as start_time_tbd,\nres.Value:sport_event.status::string as status,\nres.Value:sport_event.tournament_round.number::string as tournament_round_number,\nres.Value:sport_event.tournament_round.type::string as tournament_round_type,\nres.Value:sport_event_status.current_inning::string as current_inning,\nres.Value:sport_event_status.display_overs::string as display_overs,\nres.Value:sport_event_status.display_score::string as display_score,\nres.Value:sport_event_status.match_status::string as match_status,\nps.value:away_score::string as away_score,\nps.value:display_score::string as period_scores_display_score,\nps.value:home_score::string as period_scores_home_score,\nps.value:home_wickets::string as period_scores_home_wickets,\nps.value:number::string as period_scores_number,\nps.value:type::string as period_scores_type,\nps.value:away_wickets::string as period_away_wickets,\nres.Value:sport_event_status.remaining_overs::string as remaining_overs,\nres.Value:sport_event_status.required_run_rate::string as required_run_rate,\nres.Value:sport_event_status.status::string as sport_event_status,\nres.Value:sport_event_status.target::string as target,\nres.Value:sport_event_status.toss_decision::string as toss_decision,\nres.Value:sport_event_status.toss_won_by::string as toss_won_by,\nres.Value:sport_event_status.winner_id::string as winner_id\nfrom EASY_STAGE.STAGE_BRONZE.DAILY_RESULTS,\ntable(flatten(V:results)) res,\ntable(flatten(res.Value:sport_event_status.period_scores)) ps;\n\ncreate or replace view easy_hist.bronze.daily_schedule\n  as\nselect\n V:\"generated_at\"::date as generated_at,\nres.Value:id::string as sport_event_id ,\nres.Value:scheduled::string as scheduled,\nres.Value:season.end_date::string as season_end_date,\nres.Value:season.id::string as season_id,\nres.Value:season.name::string as season_name,\nres.Value:season.start_date::string as season_start_date,\nres.Value:season.year::string as season_year,\nres.Value:start_time_tbd::string as start_time_tbd,\nres.Value:status::string as status,\nres.Value:tournament_round.number::string as tournament_round_number,\nres.Value:tournament_round.type::string as tournament_round_type,\nres.Value:tournament.id::varchar as id,\nres.Value:tournament.gender::varchar as gender,\nres.Value:tournament.name::varchar as name,\nres.Value:tournament.type::varchar as type,\nres.Value:tournament.sport.id::varchar as sport_id,\nres.Value:tournament.sport.name::varchar as sport_name,\nres.Value:tournament.category.id::varchar as category_id,\nres.Value:tournament.category.name::varchar as category_name,\nres.Value:tournament.category.country_code::varchar as category_country_code,\nres.Value:venue.id::varchar as venue_id,\nres.Value:venue.name::varchar as venue_name,\nres.Value:venue.capacity::varchar as venue_capacity,\nres.Value:venue.city_name::varchar as venue_city_name,\nres.Value:venue.country_name::varchar as venue_country_name,\nres.Value:venue.map_coordinates::varchar as venue_map_coordinates,\nres.Value:venue.country_code::varchar as venue_country_code,\nres.Value:venue.timezone::varchar as venue_timezone,\nc.Value:id::varchar as competitor_id,\nc.Value:name::varchar as competitor_name,\nc.Value:country::varchar as competitor_country,\nc.Value:country_code::varchar as competitor_country_code,\nc.Value:abbreviation::varchar as competitor_abbreviation,\nc.Value:gender::varchar as competitor_gender,\nc.Value:qualifier::varchar as competitor_qualifier\nfrom EASY_STAGE.STAGE_BRONZE.DAILY_SCHEDULE,\ntable(flatten(V:sport_events)) res,\ntable(flatten(res.Value:competitors)) c;\n\n\n---- season dimension -----\n\n--Silver\ncreate or replace view easy_hist.silver.season_details\nas\nselect season_id, season_name, season_start_date, season_end_date, season_year, generated_at\nfrom easy_hist.bronze.daily_schedule s\ngroup by season_id, season_name, season_start_date, season_end_date, season_year, generated_at;\n--Gold\ncreate or replace table easy_hist.gold.dim_season\nas\nselect * from easy_hist.silver.season_details;\n\n--- competitor dimension -----\n\n--Silver\ncreate or replace view easy_hist.silver.team_details\nas\nselect competitor_id, competitor_name, competitor_country, competitor_gender, competitor_country_code, competitor_abbreviation, generated_at\nfrom easy_hist.bronze.daily_schedule\ngroup by competitor_id, competitor_name, competitor_country, competitor_gender, competitor_country_code, competitor_abbreviation, generated_at;\n\n--Gold\ncreate or replace table easy_hist.gold.dim_teams\nas\nselect * from easy_hist.silver.team_details;\n\n-- results ----\n\nselect sport_event_id, season_id, season_name, toss_won_by, winner_id\nfrom easy_hist.bronze.daily_results\ngroup by sport_event_id, season_id, season_name, toss_won_by, winner_id;\n\n--- daily match winner details ----\n\n--Silver\ncreate or replace view easy_hist.silver.match_result\nas\nselect r.*, c.competitor_name as winner_name from\n(select sport_event_id, season_id, season_name, toss_won_by, winner_id\nfrom easy_hist.bronze.daily_results\ngroup by sport_event_id, season_id, season_name, toss_won_by, winner_id) r\nleft join easy_hist.silver.team_details c\non r.winner_id = c.competitor_id;\n\n--Gold\ncreate or replace table easy_hist.gold.dim_match_result\nas\nselect * from easy_hist.silver.match_result;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"annotations": []
	}
}